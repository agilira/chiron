// ============================================
// Layout Utilities
// Simple grid and flex utilities for common layouts
// ============================================

@use '../abstracts/mixins' as *;

// Grid layouts
.grid {
    display: grid;
    gap: var(--space-4);
}

.grid-1 {
    grid-template-columns: 1fr;
}

.grid-2 {
    grid-template-columns: repeat(2, 1fr);
}

.grid-3 {
    grid-template-columns: repeat(3, 1fr);
}

.grid-4 {
    grid-template-columns: repeat(4, 1fr);
}

// Auto-fit grid (responsive without media queries)
.grid-auto-fit {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
}

// Flexbox layouts
.flex {
    display: flex;
    gap: var(--space-4);
}

.flex-col {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

.items-center {
    align-items: center;
}

.items-start {
    align-items: flex-start;
}

.items-end {
    align-items: flex-end;
}

.justify-center {
    justify-content: center;
}

.justify-between {
    justify-content: space-between;
}

.justify-end {
    justify-content: flex-end;
}

// Gap utilities
.gap-2 {
    gap: var(--space-2);
}

.gap-4 {
    gap: var(--space-4);
}

.gap-6 {
    gap: var(--space-6);
}

.gap-8 {
    gap: var(--space-8);
}

// Responsive: collapse to single column on mobile
@include mobile {
    .grid-2,
    .grid-3,
    .grid-4 {
        grid-template-columns: 1fr;
    }
}

// Responsive: 2 columns on tablet
@include tablet {
    .grid-3,
    .grid-4 {
        grid-template-columns: repeat(2, 1fr);
    }
}
